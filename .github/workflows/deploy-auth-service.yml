name: Build and Deploy Changed Microservices

on:
  push:
    branches:
      - main
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get changed folders
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          dir_names: "true"

      - name: Filter microservice directories
        id: filter
        run: |
          echo "services=" >> $GITHUB_OUTPUT
          for dir in ${{ steps.changed.outputs.all_changed_dirs }}; do
            if [[ -f "$dir/Dockerfile" ]]; then
              echo "::add-mask::$dir"
              echo "$dir detected"
              echo "services+=${dir} " >> $GITHUB_ENV
            fi
          done

      - name: Deploy changed microservices
        uses: appleboy/ssh-action@v1.0.0
        env:
          SERVICES: ${{ env.services }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            REPO_CODE="https://github.com/Bryan03A/UserDomain.git"
            REPO_ENVS="https://${{ secrets.ENV_REPO_TOKEN }}@github.com/Bryan03A/DomainUsers-envs.git"

            mkdir -p ~/deploy-code
            mkdir -p ~/deploy-envs

            cd ~/deploy-code
            if [ -d "UserDomain" ]; then
              cd UserDomain && git pull origin main && cd ..
            else
              git clone $REPO_CODE
            fi

            cd ~/deploy-envs
            if [ -d "DomainUsers-envs" ]; then
              cd DomainUsers-envs && git pull origin main && cd ..
            else
              git clone $REPO_ENVS
            fi

            if [ -d ~/deploy-envs/DomainUsers-envs/UserDomain ]; then
              cp -r -f ~/deploy-envs/DomainUsers-envs/UserDomain/* ~/deploy-code/UserDomain/
            fi

            docker login -u bfury0329 -p "${{ secrets.DOCKER_HUB_PASSWORD }}"

            docker network inspect app-network >/dev/null 2>&1 || docker network create app-network

            cd ~/deploy-code/UserDomain

            for dir in $SERVICES; do
              name=$(basename "$dir")
              if [ -f "$name/Dockerfile" ]; then
                docker rm -f "$name" 2>/dev/null || true
                docker build -t bfury0329/$name:latest "$name"
                docker push bfury0329/$name:latest
                docker run -d --name "$name" --network app-network bfury0329/$name:latest
              fi
            done